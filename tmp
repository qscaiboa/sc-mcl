 ggplot( data, aes(reorder(pathway, NES), NES)) +
  geom_col(aes(fill= abs(NES) > 2.5) ) +
  coord_flip() +
  labs( x="Normalized Enrichment Score",
       title="Hallmark & KEGG pathways NES from GSEA") + 
	   theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())  +
		 geom_text(aes(label = pathway), hjust = ifelse(data$NES > 0, 1, 0), color = "black", y=0 ) +
		 theme(panel.grid.major = element_blank(), 
		       panel.grid.minor = element_blank(),
               panel.background = element_blank())
               
               
Object2@meta.data <- mdata
Object2[["percent.mt"]]<- PercentageFeatureSet(Object2, pattern = "MT-")
VlnPlot(Object2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)


plot1 <- FeatureScatter(Object2, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(Object2, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2


Object2 <- subset(Object2, subset = nFeature_RNA > 200 & nFeature_RNA < 3500 & percent.mt < 15)
VlnPlot(Object2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Object2 <- NormalizeData(Object2, normalization.method = "LogNormalize", scale.factor = 10000)
Object2 <- NormalizeData(Object2)
Object2 <- FindVariableFeatures(Object2, selection.method = "vst", nfeatures = 2000)

# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(Object2), 10)

# plot variable features with and without labels
plot1 <- VariableFeaturePlot(Object2)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot1 + plot2

all.genes <- rownames(Object2)
Object2 <- ScaleData(Object2, features = all.genes)
Object2 <- RunPCA(Object2, features = VariableFeatures(object = Object2))
print(Object2[["pca"]], dims = 1:5, nfeatures = 5)

VizDimLoadings(Object2, dims = 1:2, reduction = "pca")

Object2 <- FindNeighbors(Object2, dims = 1:10)
Object2 <- FindClusters(Object2, resolution = 0.5)
Object2 <- RunUMAP(Object2, dims = 1:10)
# note that you can set `label = TRUE` or use the LabelClusters function to help label
# individual clusters
DimPlot(Object2, reduction = "umap",label=T)
DimPlot(Object2, reduction = "umap", label=T,group.by= "species")

Object2 <- RunTSNE(Object2, dims = 1:10)
DimPlot(Object2, reduction = "tsne",label=T)
DimPlot(Object2, reduction = "tsne", label=T,group.by= "species")

FeaturePlot(Object2, features = c("CD79A"))
FeaturePlot(Object2, reduction = "tsne",features = c("CD79A"))
